Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Create the form (window)
$form = New-Object System.Windows.Forms.Form
$form.Text = "DLL Tool"
$form.Size = New-Object System.Drawing.Size(400,200)
$form.StartPosition = "CenterScreen"

# Button: Generate
$generateButton = New-Object System.Windows.Forms.Button
$generateButton.Location = New-Object System.Drawing.Point(50, 50)
$generateButton.Size = New-Object System.Drawing.Size(100, 30)
$generateButton.Text = "Generate"
$form.Controls.Add($generateButton)

# Button: Builder
$builderButton = New-Object System.Windows.Forms.Button
$builderButton.Location = New-Object System.Drawing.Point(160, 50)
$builderButton.Size = New-Object System.Drawing.Size(100, 30)
$builderButton.Text = "Builder"
$form.Controls.Add($builderButton)

# Button: Close
$closeButton = New-Object System.Windows.Forms.Button
$closeButton.Location = New-Object System.Drawing.Point(270, 50)
$closeButton.Size = New-Object System.Drawing.Size(100, 30)
$closeButton.Text = "Close"
$form.Controls.Add($closeButton)

# Label to show status
$statusLabel = New-Object System.Windows.Forms.Label
$statusLabel.Location = New-Object System.Drawing.Point(10, 100)
$statusLabel.Size = New-Object System.Drawing.Size(350,20)
$form.Controls.Add($statusLabel)

# Event handler for Generate button
$generateButton.Add_Click({
    # Prompt user for the DLL name
    $dllNameDialog = New-Object System.Windows.Forms.Form
    $dllNameDialog.Text = "Enter DLL Name"
    $dllNameDialog.Size = New-Object System.Drawing.Size(300, 150)

    # Label for the dialog
    $label = New-Object System.Windows.Forms.Label
    $label.Location = New-Object System.Drawing.Point(10, 10)
    $label.Size = New-Object System.Drawing.Size(250, 20)
    $label.Text = "Enter the name of the DLL:"
    $dllNameDialog.Controls.Add($label)

    # Textbox for input
    $inputTextbox = New-Object System.Windows.Forms.TextBox
    $inputTextbox.Location = New-Object System.Drawing.Point(10, 40)
    $inputTextbox.Size = New-Object System.Drawing.Size(250, 20)
    $dllNameDialog.Controls.Add($inputTextbox)

    # Button for dialog
    $okButton = New-Object System.Windows.Forms.Button
    $okButton.Location = New-Object System.Drawing.Point(90, 70)
    $okButton.Size = New-Object System.Drawing.Size(100, 30)
    $okButton.Text = "OK"
    $dllNameDialog.Controls.Add($okButton)

    # Action for OK button
    $okButton.Add_Click({
        $dllName = $inputTextbox.Text
        if (-not [string]::IsNullOrWhiteSpace($dllName)) {
            $dllPath = "$dllName.dll"

            # Example C# code to compile
            $csCode = @"
using System;
public class MyMod {
    public static void HelloWorld() {
        Console.WriteLine(""Hello from the DLL!"");
    }
}
"@

            # Path to the temporary source file
            $srcFilePath = "$($env:TEMP)\$dllName.cs"
            $dllOutputPath = "$pwd\$dllPath"

            # Write the C# code to a file
            $csCode | Out-File -FilePath $srcFilePath -Encoding utf8

            # Define the path to csc.exe (C# compiler)
            $cscPath = "$env:WINDIR\Microsoft.NET\Framework\v4.0.30319\csc.exe"

            # Compile the C# file into a DLL
            & $cscPath /target:library /out:$dllOutputPath $srcFilePath

            # Check if DLL was generated
            if (Test-Path $dllOutputPath) {
                $statusLabel.Text = "DLL created successfully: $dllPath"
            } else {
                $statusLabel.Text = "DLL generation failed."
            }
        } else {
            $statusLabel.Text = "Please enter a valid DLL name."
        }
        $dllNameDialog.Close()
    })

    [void]$dllNameDialog.ShowDialog()
})

# Event handler for Builder button (you can add functionality here)
$builderButton.Add_Click({
    [System.Windows.Forms.MessageBox]::Show("Builder button clicked!")
})

# Event handler for Close button
$closeButton.Add_Click({
    $form.Close()
})

# Show the form
$form.Topmost = $true
$form.Add_Shown({ $form.Activate() })
[void]$form.ShowDialog()
